name: Release

on:
  push:
    tags:
      - "[0-9]+_v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v3"

      - name: Set Version
        run: |
          VERSION_NAME=$(echo ${{github.ref_name}} | sed -r 's/([0-9]+)_v([0-9]+.[0-9]+.[0-9]+)/\2/')
          VERSION_CODE=$(echo ${{github.ref_name}} | sed -r 's/([0-9]+)_v([0-9]+.[0-9]+.[0-9]+)/\1/')
          echo $VERSION_NAME
          echo $VERSION_CODE
          sed -i "s/version=\"0.0.0\"/version=\"$VERSION_NAME\"/" python/setup.py
          sed -i "s/version=\"0.0.0\"/version=\"$VERSION_NAME\"/" client/setup.py
          sed -i "/versionCode/c\versionCode $VERSION_CODE" android/app/build.gradle
          sed -i "/versionName/c\versionName '$VERSION_NAME'" android/app/build.gradle
        
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build
        run: sudo make deps && make lint proto build docs

      - name: Sign apk
        run: |
          openssl enc -base64 -d -A <<< $APK_CERT > /tmp/bluerpc.crt
          openssl enc -base64 -d -A <<< $APK_KEY > /tmp/bluerpc.key
          openssl pkcs12 -export -in /tmp/bluerpc.crt -inkey /tmp/bluerpc.key -out /tmp/store.p12 -name app -passout pass:password
          /usr/local/lib/android/sdk/build-tools/31.0.0/zipalign -v 4 android/app/build/outputs/apk/release/app-release-unsigned.apk bluerpc.apk
          /usr/local/lib/android/sdk/build-tools/31.0.0/apksigner sign --ks /tmp/store.p12 bluerpc.apk <<< "password"
        shell: bash
        env:
          APK_CERT: ${{ secrets.APK_CERT }}
          APK_KEY: ${{ secrets.APK_KEY }}

      - name: Release apk
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bluerpc.apk

      - name: Publish worker python package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_BLUERPC_API_TOKEN }}
          packages_dir: python/dist/

      - name: Publish client python package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_BLUERPC_CLIENT_API_TOKEN }}
          packages_dir: client/dist/

      - name: Deploy Docs
        env:
          DEPLOYER_TOKEN: ${{ secrets.DEPLOYER_TOKEN }}
        run: |
          git clone https://drosodeployer:$DEPLOYER_TOKEN@github.com/BlueRPC/bluerpc.github.io
          mv bluerpc.github.io/.git git
          rm -rf bluerpc.github.io
          mv docs/site bluerpc.github.io
          mv git bluerpc.github.io/.git
          cd bluerpc.github.io
          git config user.name "drosodeployer"
          git config user.email "githubdeployer@thomasz.me"
          git add . && git commit -m "deploy docs"
          git push https://drosodeployer:$DEPLOYER_TOKEN@github.com/BlueRPC/bluerpc.github.io

  docker:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: python/Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            ghcr.io/bluerpc/worker:${{github.ref_name}}
            ghcr.io/bluerpc/worker:latest
